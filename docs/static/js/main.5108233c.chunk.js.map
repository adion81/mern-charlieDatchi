{"version":3,"sources":["assets/img/charlie.jpg","assets/img/charlieWork.jpg","assets/img/charlieWin.jpg","assets/img/charlieEat.jpg","assets/img/charliePuke.jpg","assets/img/charlieLose.jpg","assets/img/charlieSleep.jpg","assets/img/charliePlay.jpg","models/Charlie.js","components/Datchi.jsx","components/Stat.jsx","components/Stats.jsx","components/Actions.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Charlie","this","name","happiness","fullness","energy","meals","img","message","Datchi","datchi","win","lose","className","src","loseGame","winGame","work","eat","puke","sleep","play","charlie","alt","Stat","stat","level","value","max","Stats","full","hap","Actions","handleEat","handleWork","handlePlay","handleSleep","onClick","e","disabled","Dashboard","style","height","App","useState","setDatchi","setWin","setLose","rules","displayRules","setDisplayRules","useEffect","chance","Math","floor","random","console","log","food","map","r","i","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5108233c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/charlie.126cef7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charlieWork.e377d6b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charlieWin.e9db4bd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charlieEat.b94d4b5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charliePuke.1c64ec55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charlieLose.fe05090c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charlieSleep.d710f6a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charliePlay.77efce48.jpg\";","class Charlie{\n    constructor(){\n        this.name = \"Charlie\";\n        this.happiness = 20;\n        this.fullness = 20;\n        this.energy = 50;\n        this.meals = 3;\n        this.img = \"charlie\";\n        this.message = \"This is Charlie. Treat him well.\"\n    }\n\n}\n\nexport default Charlie;","import React from 'react';\n\nimport charlie from '../assets/img/charlie.jpg';\nimport work from '../assets/img/charlieWork.jpg';\nimport winGame from '../assets/img/charlieWin.jpg';\nimport eat from '../assets/img/charlieEat.jpg';\nimport puke from '../assets/img/charliePuke.jpg';\nimport loseGame from '../assets/img/charlieLose.jpg';\nimport sleep from '../assets/img/charlieSleep.jpg';\nimport play from '../assets/img/charliePlay.jpg';\n\nconst Datchi = ({datchi,win,lose}) => {\n    return (\n        <div className=\"nes-container with-title is-centered\">\n            <h2 className=\"title\">{datchi.name}</h2>\n            <img  \n                className=\"nes-container is-rounded is-dark col-5\" \n                src={\n                    lose ? loseGame :\n                        win ? winGame :\n                            datchi.img ===\"work\" ? work : \n                                datchi.img === \"eat\" ? eat :\n                                    datchi.img === \"puke\" ? puke :\n                                        datchi.img === \"sleep\" ? sleep :\n                                            datchi.img === \"play\" ? play :\n                                                charlie\n                } \n                alt={datchi.name}/>\n        </div>\n    );\n}\n\nexport default Datchi;","import React from 'react';\n\nconst Stat = ({stat,level}) => {\n    return (\n        <div className=\"col-6 my-2\">\n            <h6>{stat}</h6>\n            {\n                stat === \"Meals\" ? <h5 className=\"my-3\">{level}</h5> :\n                    <progress \n                        className={level <= 25 ? \"nes-progress is-error\":\n                                        level >25 && level <=50 ? \"nes-progress  is-warning\" : \n                                            level > 50 && level <=75 ? \"nes-progress is-success\" : \"nes-progress is-primary\"\n                        } \n                        value={level} \n                        max=\"100\"\n                    ></progress>\n            }\n        </div>\n    );\n}\n\nexport default Stat;","import React from 'react';\nimport Stat from './Stat';\n\nconst Stats = ({energy,meals,full,hap}) => {\n    return (\n        <div  >\n            <h3 className=\"nes-text is-primary nes-container is-dark is-rounded\">Stats</h3>\n            <div className=\"row\">\n                <Stat \n                    level={hap}\n                    stat=\"Happiness\"\n                />\n                <Stat \n                    level={full}\n                    stat=\"Fullness\"\n                />\n                <Stat \n                    level={energy}\n                    stat=\"Energy\"\n                />\n                <Stat \n                    level={meals}\n                    stat=\"Meals\"\n                />\n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default Stats;","import React from 'react';\n\nconst Actions = ({handleEat,handleWork,handlePlay,handleSleep,win,lose}) => {\n    return (\n        <div>\n            <h3 className=\"nes-text is-warning is-rounded nes-container is-dark\">Actions</h3>\n            <div className=\"row p-2\">\n                <div className=\"col-6 my-4\">\n                    {\n                        win || lose ? <button \n                                        className=\"nes-btn is-disabled\" \n                                        onClick={(e) => handlePlay(e)}\n                                        disabled\n                                    >Play</button> :\n                                    <button \n                                        className=\"nes-btn is-success\" \n                                        onClick={(e) => handlePlay(e)}\n                                    >Play</button>\n                    }\n                </div>\n                <div className=\"col-6 my-4\">\n                    {\n                        win || lose ? <button \n                                        className=\"nes-btn is-disabled\" \n                                        onClick={(e) => handleSleep(e)}\n                                    >Sleep</button> :\n\n                                    <button \n                                        className=\"nes-btn is-success\" \n                                        onClick={(e) => handleSleep(e)}\n                                    >Sleep</button>\n                    }\n                </div>\n                <div className=\"col-6 my-4\">\n                    {\n                        win || lose ?   <button \n                                            className=\"nes-btn is-disabled\" \n                                            onClick={(e) => handleWork(e)}\n                                        >Work</button> : \n                                        <button \n                                            className=\"nes-btn is-success\"\n                                            onClick={(e) => handleWork(e)} \n                                        >Work</button>\n                    }\n                </div>\n                <div className=\"col-6 my-4\">\n                    {\n                        win || lose ?   <button \n                                            className=\"nes-btn is-disabled\"\n                                            onClick={(e) => handleEat(e)} \n                                        >Eat</button> :\n                                        <button \n                                            className=\"nes-btn is-success\"\n                                            onClick={(e) => handleEat(e)} \n                                        >Eat</button>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Actions;","import React from 'react';\nimport Stats from './Stats';\nimport Actions from './Actions';\n\nconst Dashboard = ({datchi,handleEat,handleWork,handleSleep,handlePlay,win,lose}) => {\n    return (\n        <div className=\"nes-container with-title is-centered\">\n            <p className=\"title\">Datchi Dashboard</p>\n            <Stats\n                energy={datchi.energy}\n                meals={datchi.meals}\n                full={datchi.fullness}\n                hap={datchi.happiness}\n            />\n            <div className=\"col-12 nes-container p-0 my-5\" style={{height: \"2px\"}}></div>\n            <Actions\n                handleEat={handleEat}\n                handleWork={handleWork}\n                handlePlay={handlePlay}\n                handleSleep={handleSleep}\n                win={win}\n                lose={lose}\n            />\n        </div>\n\n    );\n}\n\nexport default Dashboard;","import React,{useState,useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"nes.css/css/nes.min.css\";\nimport Charlie from './models/Charlie';\nimport Datchi from './components/Datchi';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  const [datchi,setDatchi] = useState(new Charlie());\n  const [win,setWin] = useState(false);\n  const [lose,setLose] = useState(false);\n  const [rules,setRules] = useState([\n    \"Win: Happiness and Fullness must be filled.\",\n    \"Lose: Happiness or Fullness is empty.\",\n    \"Click WORK to earn meals.\",\n    \"Click PLAY to increase Happiness.\",\n    \"Click EAT to increase Fullness.\",\n    \"Click SLEEP to gain Energy.\"\n  ]);\n  const [displayRules,setDisplayRules] = useState(false);\n\n  useEffect(() => {\n    if(datchi.fullness >= 100 && datchi.happiness >= 100){\n      setWin(true);\n    }\n    else if(datchi.fullness <= 0 || datchi.happiness <= 0){\n      setLose(true);\n    }\n  },[datchi])\n  \n  const handleRules = (e) => {\n    setDisplayRules(!displayRules);\n  }\n\n  const reset = (e) => {\n    setDatchi(new Charlie());\n    setWin(false);\n    setLose(false);\n  }\n\n\n  const handleEat =(e) => {\n    let chance = Math.floor(Math.random() * 101);\n    console.log(chance);\n    if(datchi.meals === 0){\n      setDatchi({\n        ...datchi,\n        message : \"You have no more food.  You gotta work for it!\"\n      })\n      return;\n    }\n    else if(chance <= 25){\n      setDatchi({\n        ...datchi,\n        meals: datchi.meals - 1,\n        img: \"puke\",\n        message : \"Charlie puked the food back up!!!\"\n      })\n      return;\n    }\n    setDatchi({\n      ...datchi,\n      meals: datchi.meals - 1,\n      img : \"eat\",\n      fullness : datchi.fullness + (Math.floor(Math.random() * 10) + 5),\n      message: \"Milksteak with a side of Jelly Beans!!!\"\n    });\n\n  }\n\n  const handlePlay = (e) => {\n    let chance = Math.floor(Math.random() * 101);\n    if(datchi.energy === 0){\n      setDatchi({\n        ...datchi,\n        message:\"Charlie is tired, need sleep.\"\n      })\n      return;\n    }\n    else if(chance <= 25){\n      setDatchi({\n        ...datchi,\n        energy: datchi.energy - 5,\n        img:\"cry\",\n        message : \"Charlie no like, Dennis is the bad man.\"\n      })\n      return;\n    }\n    setDatchi({\n      ...datchi,\n      energy: datchi.energy - 5,\n      happiness : datchi.happiness + (Math.floor(Math.random() * 10) + 5),\n      img: \"play\",\n      message : \"Another successful game of night crawlers.\"\n    })\n  }\n\n  const handleSleep = (e) => {\n    setDatchi({\n      ...datchi,\n      happiness: datchi.happiness - 5,\n      fullness: datchi.fullness - 5,\n      energy: datchi.energy + 15,\n      img: \"sleep\",\n      message: \"ZzzzzZzzzzzZzzzzz\"\n    })\n  }\n\n  const handleWork = (e) => {\n    if(datchi.energy === 0){\n      setDatchi({\n        ...datchi,\n        message:\"Charlie is tired, no work more.\"\n      })\n      return;\n    }\n    let food = Math.floor(Math.random() * 3) + 1;\n    setDatchi({\n      ...datchi,\n      meals: datchi.meals + food,\n      energy: datchi.energy - 5,\n      img: \"work\",\n      message: \"Charlie work is hard!\"\n    })\n  }\n  return (\n    <div className=\"row justify-content-around p-2 py-4\">\n      <div className=\" col-sm-12 col-md-4\">\n        <Dashboard\n          datchi={datchi}\n          handleEat={handleEat}\n          handleWork={handleWork}\n          handlePlay={handlePlay}\n          handleSleep={handleSleep}\n          win={win}\n          lose={lose}\n        />\n      </div>\n      <div className=\"col-md-8 col-sm-12\" > \n        <Datchi\n          datchi={datchi}\n          win={win}\n          lose={lose}\n        />\n        {\n          win ? <h2 className=\"nes-text text-center my-5\">Charlie Happy!!!</h2> : lose ? <h2 className=\"nes-text text-center my-5\">Charlie no happy, you are the bad man.</h2> :  <p className=\"nes-text text-center my-5\">{datchi.message}</p>\n        }\n\n        {\n          win || lose ? <button \n                          className=\"nes-btn is-error col-12\"\n                          onClick={(e) => reset(e)}\n                        >Reset</button> : \n                        <button\n                          className=\"nes-btn is-success col-12\"\n                          onClick={(e) => handleRules(e)}\n                        >Rules</button>\n        }\n        <ol className=\"nes-list is-disc text-center\" >\n          {\n            displayRules ? rules.map((r,i) => <li className=\"m-2\" key={i}>{r}</li> ) : null\n          }\n\n        </ol>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}